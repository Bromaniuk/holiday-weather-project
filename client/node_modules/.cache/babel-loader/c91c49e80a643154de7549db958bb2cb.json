{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\briro\\\\Desktop\\\\holiday-weather-project\\\\client\\\\src\\\\components\\\\pages\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport WeatherDataService from '../../services/WeatherDataService'; // import queryString from 'query-string'\n\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = props => {\n  _s();\n\n  const [country, setCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [monthlyAverages, setMonthlyAverages] = useState([]);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  useEffect(() => {\n    // let city = getQueryVariable('city')\n    // let country = getQueryVariable('country')\n    console.log(props.city);\n    setCity(props.city);\n    setCountry(props.country);\n    WeatherDataService.getCityData(country, city).then(response => {\n      console.log(response.data);\n      setMonthlyAverages(response.data);\n    });\n  }, []); // Get country and city from URL parameters\n\n  const getQueryVariable = variable => {\n    let query = window.location.search.substring(1);\n    let vars = query.split(\"&\");\n\n    for (let i = 0; i < vars.length; i++) {\n      let pair = vars[i].split(\"=\");\n\n      if (pair[0] === variable) {\n        return pair[1];\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Weather Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Monthly Averages: \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: monthlyAverages.map((month, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: months[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      }, [])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Weather, \"s34ELg2ossO+vNaaHA3RhHgjZUY=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/briro/Desktop/holiday-weather-project/client/src/components/pages/Weather.js"],"names":["React","useState","useEffect","WeatherDataService","Weather","props","country","setCountry","city","setCity","monthlyAverages","setMonthlyAverages","months","console","log","getCityData","then","response","data","getQueryVariable","variable","query","window","location","search","substring","vars","split","i","length","pair","map","month","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,mCAA/B,C,CACA;;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMW,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACG,IAAlB;AACAC,IAAAA,OAAO,CAACJ,KAAK,CAACG,IAAP,CAAP;AACAD,IAAAA,UAAU,CAACF,KAAK,CAACC,OAAP,CAAV;AACAH,IAAAA,kBAAkB,CAACY,WAAnB,CAA+BT,OAA/B,EAAwCE,IAAxC,EACKQ,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB;AACAP,MAAAA,kBAAkB,CAACM,QAAQ,CAACC,IAAV,CAAlB;AACH,KAJL;AAKH,GAXQ,EAWN,EAXM,CAAT,CAPqB,CAoBrB;;AACA,QAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACnC,QAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC,CAAjC,CAAZ;AACA,QAAIC,IAAI,GAAGL,KAAK,CAACM,KAAN,CAAY,GAAZ,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,UAAIE,IAAI,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQD,KAAR,CAAc,GAAd,CAAX;;AACA,UAAIG,IAAI,CAAC,CAAD,CAAJ,KAAYV,QAAhB,EAA0B;AACtB,eAAOU,IAAI,CAAC,CAAD,CAAX;AACH;AACJ;AACJ,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,uCAAuBtB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBACKE,eAAe,CAACqB,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnC,4BACI;AAAA,kCACI;AAAA,sBAAKrB,MAAM,CAACqB,KAAD;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH,OAPA,EAOE,EAPF;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAhDD;;GAAM5B,O;;KAAAA,O;AAkDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport WeatherDataService from '../../services/WeatherDataService';\r\n// import queryString from 'query-string'\r\nimport '../../App.css';\r\n\r\nconst Weather = props => {\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [monthlyAverages, setMonthlyAverages] = useState([]);\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n\r\n    useEffect(() => {\r\n        // let city = getQueryVariable('city')\r\n        // let country = getQueryVariable('country')\r\n        console.log(props.city)\r\n        setCity(props.city);\r\n        setCountry(props.country);\r\n        WeatherDataService.getCityData(country, city)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setMonthlyAverages(response.data);\r\n            })\r\n    }, [])\r\n\r\n    // Get country and city from URL parameters\r\n    const getQueryVariable = (variable) => {\r\n        let query = window.location.search.substring(1);\r\n        let vars = query.split(\"&\");\r\n        for (let i = 0; i < vars.length; i++) {\r\n            let pair = vars[i].split(\"=\")\r\n            if (pair[0] === variable) {\r\n                return pair[1]\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='weather-wrapper'>\r\n            <span>Weather Page</span>\r\n            <h2>Monthly Averages: {city}</h2>\r\n            <table>\r\n                {monthlyAverages.map((month, index) => {\r\n                    return (\r\n                        <tr>\r\n                            <th>{months[index]}</th>\r\n                            <td>{month}</td>\r\n                        </tr>\r\n                    )\r\n                }, [])}\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}