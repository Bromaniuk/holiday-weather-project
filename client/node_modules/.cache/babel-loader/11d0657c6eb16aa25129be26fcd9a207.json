{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\briro\\\\Desktop\\\\holiday-weather-project\\\\src\\\\components\\\\AutocompleteComponent.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst searchOptions = {\n  types: ['(cities)']\n};\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.routeToDestination = address => handleSelect = address => {\n      // console.log(address)\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n\n    this.state = {\n      address: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      searchOptions: searchOptions,\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n            placeholder: 'Search your destination',\n            className: 'location-search-input'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 41\n          }, this), suggestions.map(suggestion => {\n            const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n            const style = suggestion.active ? {\n              backgroundColor: '#fafafa',\n              cursor: 'pointer'\n            } : {\n              backgroundColor: '#ffffff',\n              cursor: 'pointer'\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                className,\n                style\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LocationSearchInput;","map":{"version":3,"sources":["C:/Users/briro/Desktop/holiday-weather-project/src/components/AutocompleteComponent.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","searchOptions","types","LocationSearchInput","Component","constructor","props","handleChange","address","setState","routeToDestination","handleSelect","then","results","latLng","console","log","catch","error","state","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IACIC,gBADJ,EAEIC,SAFJ,QAGO,2BAHP;;AAKA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,CAAC,UAAD;AADW,CAAtB;;AAIA,MAAMC,mBAAN,SAAkCN,KAAK,CAACO,SAAxC,CAAkD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,YALmB,GAKJC,OAAO,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACH,KAPkB;;AAAA,SASnBE,kBATmB,GASEF,OAAO,IAE5BG,YAAY,GAAGH,OAAO,IAAI;AACtB;AACAT,MAAAA,gBAAgB,CAACS,OAAD,CAAhB,CACKI,IADL,CACUC,OAAO,IAAIb,SAAS,CAACa,OAAO,CAAC,CAAD,CAAR,CAD9B,EAEKD,IAFL,CAEUE,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB,CAFpB,EAGKG,KAHL,CAGWC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAHpB;AAIH,KAjBkB;;AAEf,SAAKC,KAAL,GAAa;AAAEX,MAAAA,OAAO,EAAE;AAAX,KAAb;AACH;;AAgBDY,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,kBAAD;AACI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWX,OADtB;AAEI,MAAA,QAAQ,EAAE,KAAKD,YAFnB;AAGI,MAAA,QAAQ,EAAE,KAAKI,YAHnB;AAII,MAAA,aAAa,EAAEV,aAJnB;AAAA,gBAMK,CAAC;AAAEoB,QAAAA,aAAF;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA,sBAA9B;AAAsDC,QAAAA;AAAtD,OAAD,kBACG;AAAA,gCACI,sBACQH,aAAa,CAAC;AACdI,YAAAA,WAAW,EAAE,yBADC;AAEdC,YAAAA,SAAS,EAAE;AAFG,WAAD;AADrB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,qBACKF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,EAEKF,WAAW,CAACK,GAAZ,CAAgBC,UAAU,IAAI;AAC3B,kBAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GACZ,yBADY,GAEZ,iBAFN,CAD2B,CAI3B;;AACA,kBAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACR;AAAEE,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,MAAM,EAAE;AAAtC,aADQ,GAER;AAAED,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,MAAM,EAAE;AAAtC,aAFN;AAGA,gCACI,oBACQT,sBAAsB,CAACK,UAAD,EAAa;AACnCF,gBAAAA,SADmC;AAEnCI,gBAAAA;AAFmC,eAAb,CAD9B;AAAA,qCAMI;AAAA,0BAAOF,UAAU,CAACK;AAAlB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,oBADJ;AAUH,WAlBA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,YADJ;AAyCH;;AA9D6C;;AAiElD,eAAe9B,mBAAf","sourcesContent":["import React from 'react';\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n} from 'react-places-autocomplete';\r\n\r\nconst searchOptions = {\r\n    types: ['(cities)']\r\n}\r\n\r\nclass LocationSearchInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { address: '' };\r\n    }\r\n\r\n    handleChange = address => {\r\n        this.setState({ address });\r\n    };\r\n\r\n    routeToDestination = address =>\r\n\r\n    handleSelect = address => {\r\n        // console.log(address)\r\n        geocodeByAddress(address)\r\n            .then(results => getLatLng(results[0]))\r\n            .then(latLng => console.log('Success', latLng))\r\n            .catch(error => console.error('Error', error));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <PlacesAutocomplete\r\n                value={this.state.address}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n                searchOptions={searchOptions}\r\n            >\r\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                    <div>\r\n                        <input\r\n                            {...getInputProps({\r\n                                placeholder: 'Search your destination',\r\n                                className: 'location-search-input',\r\n                            })}\r\n                        />\r\n                        <div className=\"autocomplete-dropdown-container\">\r\n                            {loading && <div>Loading...</div>}\r\n                            {suggestions.map(suggestion => {\r\n                                const className = suggestion.active\r\n                                    ? 'suggestion-item--active'\r\n                                    : 'suggestion-item';\r\n                                // inline style for demonstration purpose\r\n                                const style = suggestion.active\r\n                                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                                return (\r\n                                    <div\r\n                                        {...getSuggestionItemProps(suggestion, {\r\n                                            className,\r\n                                            style,\r\n                                        })}\r\n                                    >\r\n                                        <span>{suggestion.description}</span>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PlacesAutocomplete>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LocationSearchInput;"]},"metadata":{},"sourceType":"module"}