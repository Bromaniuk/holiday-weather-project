{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\briro\\\\Desktop\\\\holiday-weather-project\\\\src\\\\components\\\\DropdownCombobox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCombobox } from 'downshift';\nimport cityList from '../city-list';\nconst items = cityList;\nimport { menuStyles, comboboxStyles } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DropdownCombobox() {\n  _s();\n\n  const [inputItems, setInputItems] = useState(items);\n  const {\n    isOpen,\n    selectedItem,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    highlightedIndex,\n    getItemProps\n  } = useCombobox({\n    items: inputItems,\n    onInputValueChange: ({\n      inputValue\n    }) => {\n      setInputItems(items.filter(item => item.toLowerCase().startsWith(inputValue.toLowerCase())));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", { ...getLabelProps(),\n      children: \"Choose an element:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: comboboxStyles,\n      ...getComboboxProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        ...getToggleButtonProps(),\n        \"aria-label\": 'toggle menu',\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", { ...getMenuProps(),\n      children: isOpen && inputItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: highlightedIndex === index ? {\n          backgroundColor: '#bde4ff'\n        } : {},\n        ...getItemProps({\n          item,\n          index\n        }),\n        children: item\n      }, `${item}${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DropdownCombobox, \"+KxLU3ALCYiRodVwoWbXoRxUTwk=\", false, function () {\n  return [useCombobox];\n});\n\n_c = DropdownCombobox;\nexport default DropdownCombobox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownCombobox\");","map":{"version":3,"sources":["C:/Users/briro/Desktop/holiday-weather-project/src/components/DropdownCombobox.js"],"names":["React","useState","useCombobox","cityList","items","menuStyles","comboboxStyles","DropdownCombobox","inputItems","setInputItems","isOpen","selectedItem","getToggleButtonProps","getLabelProps","getMenuProps","getInputProps","getComboboxProps","highlightedIndex","getItemProps","onInputValueChange","inputValue","filter","item","toLowerCase","startsWith","map","index","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,MAAMC,KAAK,GAAGD,QAAd;AACA,SAAQE,UAAR,EAAoBC,cAApB,QAAyC,SAAzC;;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACG,KAAD,CAA5C;AACA,QAAM;AACJM,IAAAA,MADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,gBAPI;AAQJC,IAAAA,gBARI;AASJC,IAAAA;AATI,MAUFhB,WAAW,CAAC;AACdE,IAAAA,KAAK,EAAEI,UADO;AAEdW,IAAAA,kBAAkB,EAAE,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAkB;AACpCX,MAAAA,aAAa,CACXL,KAAK,CAACiB,MAAN,CAAaC,IAAI,IACfA,IAAI,CAACC,WAAL,GAAmBC,UAAnB,CAA8BJ,UAAU,CAACG,WAAX,EAA9B,CADF,CADW,CAAb;AAKD;AARa,GAAD,CAVf;AAqBA,sBACE;AAAA,4BACE,sBAAWV,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAEP,cAAZ;AAAA,SAAgCU,gBAAgB,EAAhD;AAAA,8BACE,sBAAWD,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAAA,WAEMH,oBAAoB,EAF1B;AAGE,sBAAY,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE,mBAAQE,YAAY,EAApB;AAAA,gBACGJ,MAAM,IACLF,UAAU,CAACiB,GAAX,CAAe,CAACH,IAAD,EAAOI,KAAP,kBACb;AACE,QAAA,KAAK,EACHT,gBAAgB,KAAKS,KAArB,GAA6B;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAA7B,GAA4D,EAFhE;AAAA,WAKMT,YAAY,CAAC;AAACI,UAAAA,IAAD;AAAOI,UAAAA;AAAP,SAAD,CALlB;AAAA,kBAOGJ;AAPH,SAIQ,GAAEA,IAAK,GAAEI,KAAM,EAJvB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AA8BD;;GArDQnB,gB;UAYHL,W;;;KAZGK,gB;AAuDT,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport {useCombobox} from 'downshift'\r\nimport cityList from '../city-list';\r\nconst items = cityList\r\nimport {menuStyles, comboboxStyles} from './utils'\r\n\r\nfunction DropdownCombobox() {\r\n  const [inputItems, setInputItems] = useState(items)\r\n  const {\r\n    isOpen,\r\n    selectedItem,\r\n    getToggleButtonProps,\r\n    getLabelProps,\r\n    getMenuProps,\r\n    getInputProps,\r\n    getComboboxProps,\r\n    highlightedIndex,\r\n    getItemProps,\r\n  } = useCombobox({\r\n    items: inputItems,\r\n    onInputValueChange: ({inputValue}) => {\r\n      setInputItems(\r\n        items.filter(item =>\r\n          item.toLowerCase().startsWith(inputValue.toLowerCase()),\r\n        ),\r\n      )\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <label {...getLabelProps()}>Choose an element:</label>\r\n      <div style={comboboxStyles} {...getComboboxProps()}>\r\n        <input {...getInputProps()} />\r\n        <button\r\n          type=\"button\"\r\n          {...getToggleButtonProps()}\r\n          aria-label={'toggle menu'}\r\n        >\r\n          &#8595;\r\n        </button>\r\n      </div>\r\n      {/* style={menuStyles} */}\r\n      <ul {...getMenuProps()} >\r\n        {isOpen &&\r\n          inputItems.map((item, index) => (\r\n            <li\r\n              style={\r\n                highlightedIndex === index ? {backgroundColor: '#bde4ff'} : {}\r\n              }\r\n              key={`${item}${index}`}\r\n              {...getItemProps({item, index})}\r\n            >\r\n              {item}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DropdownCombobox;"]},"metadata":{},"sourceType":"module"}