{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\briro\\\\Desktop\\\\holiday-weather-project\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport { List, CellMeasurer, CellMeasurerCache } from 'react-virtualized';\nimport cityList from '../city-list';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomeButton(val) {\n  _s();\n\n  let history = useHistory();\n  history.push('/search/' + val);\n}\n\n_s(HomeButton, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomeButton;\n;\nexport default class Search extends React.Component {\n  constructor(props) {\n    super();\n\n    this.onSelect = item => {\n      this.setState({\n        selection: item\n      });\n      console.log(item);\n      HomeButton;\n    };\n\n    this.renderItem = item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchItem\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.renderMenu = (items, _, autocompleteStyle) => {\n      this.cellHeightCache.clearAll();\n\n      const rowRenderer = ({\n        key,\n        index,\n        parent,\n        style\n      }) => {\n        const Item = items[index];\n\n        const onMouseDown = e => {\n          if (e.button === 0) {\n            Item.props.onClick(e);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(CellMeasurer, {\n          cache: this.cellHeightCache,\n          parent: parent,\n          rowIndex: index,\n          children: /*#__PURE__*/React.cloneElement(Item, {\n            style: style,\n            key: key,\n            onMouseEnter: null,\n            onMouseDown: onMouseDown\n          })\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this);\n      };\n\n      return /*#__PURE__*/_jsxDEV(List, {\n        rowHeight: this.cellHeightCache.rowHeight,\n        height: 207,\n        rowCount: items.length,\n        rowRenderer: rowRenderer,\n        width: autocompleteStyle.minWidth || 0,\n        style: {\n          //...customStyles,\n          height: 'auto',\n          maxHeight: '207px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.cellHeightCache = new CellMeasurerCache({\n      defaultHeight: 42,\n      fixedWidth: true\n    });\n    this.state = {\n      searchingFor: '',\n      data: cityList,\n      selection: ''\n    };\n  }\n\n  render() {\n    const searchTerm = this.state.searchingFor;\n    let data = searchTerm ? this.state.data.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase())) : [];\n    return /*#__PURE__*/_jsxDEV(Autocomplete, {\n      items: data,\n      value: this.state.searchingFor,\n      renderItem: this.renderItem,\n      renderMenu: this.renderMenu,\n      getItemValue: item => item.name,\n      onChange: (e, value) => this.setState({\n        searchingFor: value\n      }),\n      onSelect: this.onSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n} // //styling.css\n// .searchItem {\n//   height: auto;\n//   cursor: pointer;\n// } .searchItem:hover {\n//   background-color: #E5E5E5;\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeButton\");","map":{"version":3,"sources":["C:/Users/briro/Desktop/holiday-weather-project/src/components/Search.js"],"names":["React","Autocomplete","List","CellMeasurer","CellMeasurerCache","cityList","useHistory","HomeButton","val","history","push","Search","Component","constructor","props","onSelect","item","setState","selection","console","log","renderItem","name","renderMenu","items","_","autocompleteStyle","cellHeightCache","clearAll","rowRenderer","key","index","parent","style","Item","onMouseDown","e","button","onClick","cloneElement","onMouseEnter","rowHeight","length","minWidth","height","maxHeight","defaultHeight","fixedWidth","state","searchingFor","data","render","searchTerm","filter","toLowerCase","includes","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Autocomplete from 'react-autocomplete'\r\nimport { List, CellMeasurer, CellMeasurerCache } from 'react-virtualized';\r\nimport cityList from '../city-list';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction HomeButton(val) {\r\n    let history = useHistory();\r\n    history.push('/search/' + val)\r\n  };\r\n\r\nexport default class Search extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.cellHeightCache = new CellMeasurerCache({\r\n            defaultHeight: 42,\r\n            fixedWidth: true\r\n        })\r\n        this.state = {\r\n            searchingFor: '',\r\n            data: cityList,\r\n            selection: '',\r\n        }\r\n    }\r\n\r\n    onSelect = (item) => {\r\n        this.setState({ selection: item })\r\n        console.log(item)\r\n        HomeButton\r\n    }\r\n\r\n    renderItem = (item) => {\r\n        return <div className='searchItem'>{item.name}</div>\r\n    }\r\n\r\n    renderMenu = (items, _, autocompleteStyle) => {\r\n        this.cellHeightCache.clearAll()\r\n        const rowRenderer = ({ key, index, parent, style }) => {\r\n            const Item = items[index]\r\n            const onMouseDown = e => {\r\n                if (e.button === 0) {\r\n                    Item.props.onClick(e)\r\n                }\r\n            }\r\n            return (\r\n                <CellMeasurer\r\n                    cache={this.cellHeightCache}\r\n                    key={key}\r\n                    parent={parent}\r\n                    rowIndex={index}\r\n                >\r\n                    {React.cloneElement(Item, {\r\n                        style: style,\r\n                        key: key,\r\n                        onMouseEnter: null,\r\n                        onMouseDown: onMouseDown\r\n                    })}\r\n                </CellMeasurer>\r\n            )\r\n        }\r\n        return (\r\n            <List\r\n                rowHeight={this.cellHeightCache.rowHeight}\r\n                height={207}\r\n                rowCount={items.length}\r\n                rowRenderer={rowRenderer}\r\n                width={autocompleteStyle.minWidth || 0}\r\n                style={{\r\n                    //...customStyles,\r\n                    height: 'auto',\r\n                    maxHeight: '207px'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const searchTerm = this.state.searchingFor;\r\n        let data = searchTerm\r\n            ? this.state.data.filter(item =>\r\n                item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n            )\r\n            : []\r\n        return (\r\n            <Autocomplete\r\n                items={data}\r\n                value={this.state.searchingFor}\r\n\r\n                renderItem={this.renderItem}\r\n                renderMenu={this.renderMenu}\r\n\r\n                getItemValue={item => item.name}\r\n                onChange={(e, value) => this.setState({ searchingFor: value })}\r\n                onSelect={this.onSelect}\r\n            />\r\n        )\r\n    }\r\n}\r\n// //styling.css\r\n// .searchItem {\r\n//   height: auto;\r\n//   cursor: pointer;\r\n// } .searchItem:hover {\r\n//   background-color: #E5E5E5;\r\n// }"]},"metadata":{},"sourceType":"module"}