{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\briro\\\\Desktop\\\\holiday-weather-project\\\\client\\\\src\\\\components\\\\pages\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport WeatherDataService from '../../services/WeatherDataService';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = props => {\n  _s();\n\n  const [country, setCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [monthlyAverages, setMonthlyAverages] = useState([]);\n  const [monthlyAveragesCelsius, setMonthlyAveragesCelsius] = useState([]);\n  const [monthlyAveragesFahrenheit, setMonthlyAveragesFahrenheit] = useState([]);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  useEffect(() => {\n    setCity(props.match.params.city);\n    setCountry(props.match.params.country);\n    WeatherDataService.getCityData(props.match.params.country, props.match.params.city).then(response => {\n      setMonthlyAverages(response.data);\n    });\n    setMonthlyAveragesCelsius(monthlyAverages.map(month => (month - 273.15).toFixed(2)));\n    setMonthlyAveragesFahrenheit(monthlyAverages.map(month => ((month - 273.15) * (9 / 5) + 32).toFixed(2)));\n  }, [props.match.params.city, props.match.params.country, monthlyAverages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Weather Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Monthly Averages: \", city, \", \", country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: monthlyAveragesCelsius.map((month, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: months[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [month, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      }, [props.match.params.city, props.match.params.country])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Weather, \"DkYyrWhpI3BqbWrQHqVa3KfcQz8=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/briro/Desktop/holiday-weather-project/client/src/components/pages/Weather.js"],"names":["React","useState","useEffect","WeatherDataService","Weather","props","country","setCountry","city","setCity","monthlyAverages","setMonthlyAverages","monthlyAveragesCelsius","setMonthlyAveragesCelsius","monthlyAveragesFahrenheit","setMonthlyAveragesFahrenheit","months","match","params","getCityData","then","response","data","map","month","toFixed","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport WeatherDataService from '../../services/WeatherDataService';\r\nimport '../../App.css';\r\n\r\n\r\n\r\nconst Weather = props => {\r\n    const [country, setCountry] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [monthlyAverages, setMonthlyAverages] = useState([]);\r\n    const [monthlyAveragesCelsius, setMonthlyAveragesCelsius] = useState([]);\r\n    const [monthlyAveragesFahrenheit, setMonthlyAveragesFahrenheit] = useState([]);\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\r\n\r\n    useEffect(() => {\r\n        setCity(props.match.params.city);\r\n        setCountry(props.match.params.country);\r\n        WeatherDataService.getCityData(props.match.params.country, props.match.params.city)\r\n            .then(response => {\r\n                setMonthlyAverages(response.data);\r\n            })\r\n        setMonthlyAveragesCelsius(monthlyAverages.map(month => (month - 273.15).toFixed(2)))\r\n        setMonthlyAveragesFahrenheit(monthlyAverages.map(month => (((month - 273.15) * (9/5) + 32).toFixed(2))))    \r\n    }, [props.match.params.city, props.match.params.country, monthlyAverages])\r\n\r\n\r\n    return (\r\n        <div className='weather-wrapper'>\r\n            <span>Weather Page</span>\r\n            <h2>Monthly Averages: {city}, {country}</h2>\r\n            <table>\r\n                {monthlyAveragesCelsius.map((month, index) => {\r\n                    return (\r\n                        <tr>\r\n                            <th>{months[index]}</th>\r\n                            <td>{month}Â°</td>\r\n                        </tr>\r\n                    )\r\n                }, [props.match.params.city, props.match.params.country])}\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}